on:
  push:
  pull_request:

name: Run Shiny App Tests

jobs:
  run-tests:
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macos-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    runs-on: ${{ matrix.config.os }}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - name: Windows Git Setup
        if: runner.os == 'Windows'
        run: git config --global core.autocrlf false

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - name: Setup Pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install R dependencies
        run: |
          install.packages("remotes")
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Install PhantomJS (if required)
        run: |
          if (!shinytest::dependenciesInstalled()) shinytest::installDependencies()
        shell: Rscript {0}

      - name: Run tests
        run: shiny::runTests(".", assert = TRUE)
        shell: Rscript {0}

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-tests
          path: tests
